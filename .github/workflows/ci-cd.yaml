name: Continuous Integration and Deployment

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup-environment:
    name: Setup Rust Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Rust environment
        uses: mehmet-copur/rust-pipeline/actions/rust/setup@main

  build-and-scan:
    name: Build and Scan Project
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build the Rust project
        uses: mehmet-copur/rust-pipeline/actions/rust/build@main

      - name: Code Security Scan
        uses: mehmet-copur/rust-pipeline/actions/security/code-scan@main

      - name: Dependency Vulnerability Scan
        uses: mehmet-copur/rust-pipeline/actions/security/dependency-scan@main

      - name: SonarQube Scan
        uses: mehmet-copur/rust-pipeline/actions/security/sonarqube-scan@main
        with:
          sonar-host: ${{ secrets.SONAR_HOST_URL }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          organization: "mehmet-copur"
          project-key: "mehmet-copur_rust-sample"
          project-name: "rust-sample"
          project-version: "1.0.0"
          sources: "src"
          tests: "tests"
          exclusions: "path/to/exclusions/**/*"

  test-project:
    name: Running Tests
    needs: build-and-scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: ['unit', 'integration', 'e2e']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Test Project
        uses: mehmet-copur/rust-pipeline/actions/rust/test/${{ matrix.test-type }}@main

  docker-build-and-push:
    name: Docker Build and Push
    needs: test-project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build and Push Docker image
        uses: mehmet-copur/rust-pipeline/actions/docker/build-and-push@main
        with:
          dockerfile: "./Dockerfile"
          context: "."
          image-name: "mcopur/kpn"
          image-tag: ${{ github.sha }}
          registry-url: ${{ secrets.DOCKER_REGISTRY_URL }}
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

  deploy:
    name: Deploy to Kubernetes
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Kubernetes
        uses: mehmet-copur/rust-pipeline/actions/kubernetes/deploy@main
        with:
          kubeconfig-data: ${{ secrets.KUBECONFIG_DATA }}
          manifest-path: "./k8s/"
